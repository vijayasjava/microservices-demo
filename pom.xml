<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.9.RELEASE</version>
		<relativePath/> 
	</parent>
	<groupId>com.lab.ali</groupId>
	<artifactId>microservices-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<packaging>pom</packaging>
	<properties>
		<java.version>11</java.version>
		<spring.boot.version>2.3.9.RELEASE</spring.boot.version>
		<maven.compiler.version>3.8.0</maven.compiler.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<twitter.stream.version>4.0.7</twitter.stream.version>
		<avro.version>1.10.0</avro.version>
		<spring.kafka.version>2.6.2</spring.kafka.version>
		<kafka-avro-serializer.version>5.5.1</kafka-avro-serializer.version>
		<spring-cloud-dependencies.version>Hoxton.SR9</spring-cloud-dependencies.version>
		<spring-cloud.version>2.2.6.RELEASE</spring-cloud.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>
  <modules>
    <module>twitter-to-kafka-service</module>
    <module>app-config-data</module>
    <module>kafka</module>
    <module>common-config</module>
    <module>config-server</module>
    <module>kafka-to-elasticsearch-service</module>
  </modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.lab.ali</groupId>
				<artifactId>app-config-data</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lab.ali</groupId>
				<artifactId>common-config</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<artifactId>kafka-admin</artifactId>
				<groupId>com.lab.ali</groupId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lab.ali</groupId>
				<artifactId>kafka-model</artifactId>
				<version>${project.version}</version>
			</dependency>
					<dependency>
			<artifactId>kafka-producer</artifactId>
			<groupId>com.lab.ali</groupId>
				<version>${project.version}</version>
		</dependency>
	     <dependency>
	     	<artifactId>kafka-consumer</artifactId>
	     	<groupId>com.lab.ali</groupId>
				<version>${project.version}</version>
	     </dependency>

		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-dependencies</artifactId>
		    <version>${spring-cloud-dependencies.version}</version>
		    <type>pom</type>
		    <scope>import</scope>
		</dependency>
						
      <dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
	  		
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
	        <dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring.boot.version}</version>
	        </dependency>
			<dependency>
			    <groupId>org.twitter4j</groupId>
			    <artifactId>twitter4j-stream</artifactId>
			    <version>${twitter.stream.version}</version>
			</dependency>
		      <dependency>
		        <groupId>org.projectlombok</groupId>
		        <artifactId>lombok</artifactId>
		        <version>${lombok.version}</version>
			  </dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-configuration-processor</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-starter-aop</artifactId>
				<version>${spring.boot.version}</version>
			</dependency> 			
			<dependency>
			    <groupId>org.apache.avro</groupId>
			    <artifactId>avro</artifactId>
			    <version>${avro.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.springframework.kafka</groupId>
			    <artifactId>spring-kafka</artifactId>
			    <version>${spring.kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${kafka-avro-serializer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>			
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-compiler-plugin</artifactId>
				    <version>${maven.compiler.version}</version>
				    <configuration>
				        <source>${java.version}</source>  
				        <target>${java.version}</target>  
				    </configuration>
				</plugin>				
			<plugin>
			    <groupId>io.fabric8</groupId>
			    <artifactId>docker-maven-plugin</artifactId>
			    <version>0.33.0</version>
			    <configuration>    
			        <verbose>true</verbose>
			        <dockerHost>tcp://192.168.99.104:2376</dockerHost>
			        <images>
			            <image>
			                <name>vijayakrishnajava/${project.groupId}-${project.artifactId}</name>
			                <build>
			                    <dockerFileDir>${project.basedir}</dockerFileDir>
			                    <assembly>
			                        <descriptorRef>artifact</descriptorRef>
			                    </assembly>
			                    <tags>
			                        <tag>${project.version}</tag>
			                    </tags>
			                </build>
			            </image>
			        </images>
			    </configuration>
			   <executions>
			     <execution>
			        <id>default</id>
			        <phase>install</phase>
			        <goals>
			            <goal>build</goal>
			            <!-- <goal>push</goal> -->
			        </goals>
			     </execution>
			   </executions>
			 </plugin>                

 
<!--             <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <image>
                        <name>vijayakrishnajava/${project.groupId}-${project.artifactId}</name>
                    </image>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>build-image</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
 -->			</plugins>
		</pluginManagement>
	</build>

</project>